package gitbucket.exprettify.util

object findBuiltInLanguageSource{
  val builtInSource = Map(
    "apollo"    -> Some("/assets/vendors/google-code-prettify/lang-apollo.js"),
    "basic"     -> Some("/assets/vendors/google-code-prettify/lang-basic.js"),
    "clj"       -> Some("/assets/vendors/google-code-prettify/lang-clj.js"),
    "css"       -> Some("/assets/vendors/google-code-prettify/lang-css.js"),
    "dart"      -> Some("/assets/vendors/google-code-prettify/lang-dart.js"),
    "erlang"    -> Some("/assets/vendors/google-code-prettify/lang-erlang.js"),
    "go"        -> Some("/assets/vendors/google-code-prettify/lang-go.js"),
    "hs"        -> Some("/assets/vendors/google-code-prettify/lang-hs.js"),
    "lisp"      -> Some("/assets/vendors/google-code-prettify/lang-lisp.js"),
    "llvm"      -> Some("/assets/vendors/google-code-prettify/lang-llvm.js"),
    "lua"       -> Some("/assets/vendors/google-code-prettify/lang-lua.js"),
    "matlab"    -> Some("/assets/vendors/google-code-prettify/lang-matlab.js"),
    "ml"        -> Some("/assets/vendors/google-code-prettify/lang-ml.js"),
    "mumps"     -> Some("/assets/vendors/google-code-prettify/lang-mumps.js"),
    "nemerle"   -> Some("/assets/vendors/google-code-prettify/lang-n.js"),
    "pascal"    -> Some("/assets/vendors/google-code-prettify/lang-pascal.js"),
    "proto"     -> Some("/assets/vendors/google-code-prettify/lang-proto.js"),
    "R"         -> Some("/assets/vendors/google-code-prettify/lang-r.js"),
    "Rd"        -> Some("/assets/vendors/google-code-prettify/lang-rd.js"),
    "scala"     -> Some("/assets/vendors/google-code-prettify/lang-scala.js"),
    "sql"       -> Some("/assets/vendors/google-code-prettify/lang-sql.js"),
    "tcl"       -> Some("/assets/vendors/google-code-prettify/lang-tcl.js"),
    "tex"       -> Some("/assets/vendors/google-code-prettify/lang-tex.js"),
    "latex"     -> Some("/assets/vendors/google-code-prettify/lang-tex.js"),
    "vb"        -> Some("/assets/vendors/google-code-prettify/lang-vb.js"),
    "vhdl"      -> Some("/assets/vendors/google-code-prettify/lang-vhdl.js"),
    "wiki"      -> Some("/assets/vendors/google-code-prettify/lang-wiki.js"),
    "wiki.meta" -> Some("/assets/vendors/google-code-prettify/lang-wiki.js"),
    "xquery"    -> Some("/assets/vendors/google-code-prettify/lang-xq.js"),
    "yaml"      -> Some("/assets/vendors/google-code-prettify/lang-yaml.js"),

    // built-in prettify.js
    "c"         -> None,
    "cpp"       -> None,
    "json"      -> None,
    "cs"        -> None,
    "java"      -> None,
    "sh"        -> None,
    "bash"      -> None,
    "bsh"       -> None,
    "csh"       -> None,
    "python"    -> None,
    "perl"      -> None,
    "ruby"      -> None,
    "javascript"-> None,
    "typescript"-> None,
    "coffee"    -> None,
    "html"      -> None,
    "xhtml"     -> None,
    "xml"       -> None,
    "xsl"       -> None,
    "mxml"      -> None
  )

  def apply(language:String) = builtInSource.get(language)
}

object findDefaultExtentionLanguage{
  val languageExtension = Vector(
    ".clj"   ->  "clj",
    ".css"   ->  "css",
    ".dart"  ->  "dart",
    ".erl"   ->  "erlang",
    ".hrl"   ->  "erlang",
    ".go"    ->  "go",
    ".hs"    ->  "hs",
    ".lisp"  ->  "lisp",
    ".cl"    ->  "lisp",
    ".l"     ->  "lisp",
    ".lsp"   ->  "lisp",
    ".scm"   ->  "lisp",
    ".el"    ->  "lisp",
    ".ss"    ->  "lisp",
    ".rkt"   ->  "lisp",
    ".ll"    ->  "llvm",
    ".llvm"  ->  "llvm",
    ".lua"   ->  "lua",
    ".m"     ->  "matlab",
    ".ml"    ->  "ml",
    ".fs"    ->  "fs",
    ".n"     ->  "nemerle",
    ".pp"    ->  "pascal",
    ".pas"   ->  "pascal",
    ".proto" ->  "proto",
    ".R"     ->  "R",
    ".Rd"    ->  "Rd",
    ".sbt"   ->  "scala",
    ".scala" ->  "scala",
    ".sql"   ->  "sql",
    ".tcl"   ->  "tcl",
    ".tex"   ->  "tex",
    ".latex" ->  "latex",
    ".vb"    ->  "vb",
    ".vbs"   ->  "vb",
    ".vhd"   ->  "vhdl",
    ".xquery"->  "xquery",
    ".yaml"  ->  "yaml",
    ".yml"   ->  "yaml",
    ".c"     ->  "c",
    ".h"     ->  "cpp",
    ".hpp"   ->  "cpp",
    ".cc"    ->  "cpp",
    ".cpp"   ->  "cpp",
    ".json"  ->  "json",
    ".cs"    ->  "cs",
    ".java"  ->  "java",
    ".sh"    ->  "sh",
    ".bash"  ->  "bash",
    ".bsh"   ->  "bsh",
    ".csh"   ->  "csh",
    ".py"    ->  "python",
    ".pyw"   ->  "python",
    ".pyc"   ->  "python",
    ".pyd"   ->  "python",
    ".pl"    ->  "perl",
    ".rb"    ->  "ruby",
    ".js"    ->  "javascript",
    ".ts"    ->  "typescript",
    ".coffee"->  "coffee",
    ".htm"   ->  "html",
    ".html"  ->  "html",
    ".xhtml" ->  "xhtml",
    ".xml"   ->  "xml",
    ".xsl"   ->  "xsl",
    ".mxml"  ->  "mxml",
    ".fxml"  ->  "xml",
    ".svd"   ->  "xml",
    ".v"     ->  "v",
    ".sv"    ->  "sv",
    ".swift" ->  "swift",
    ".asm"   ->  "asm",
    ".S"     ->  "asm",
    ".s"     ->  "asm",
  )


  def apply(fileName:String) = languageExtension
    .find(i=>fileName.endsWith(i._1)) match {
      case Some((ext,lang)) =>Some(lang)
      case _ => None
    }

}
